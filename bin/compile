#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>
# $HOME: /app

# fail fast
set -eo pipefail

BUILD_DIR=${1:-.}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}

HEROKU_DIR=$BUILD_DIR/.heroku
BIN_DIR=$HEROKU_DIR/bin

# To enable the local source build cache path, copy the files and match the build path with the startup path.
cp -rpT $BUILD_DIR $HOME
cd $HOME

ls -al $CACHE_DIR

# install bun
export BUN_INSTALL=$HEROKU_DIR/bun
export BUN_DIR=$BUN_INSTALL/bin
# NOTE: For now support latest version only
curl -fsSL https://bun.sh/install | bash

# set environment variables
PROFILE_PATH="$BUILD_DIR/.profile.d/bun.sh"
mkdir -p $(dirname $PROFILE_PATH)
echo 'export BUN_INSTALL="$HOME/.heroku/bun"' >> $PROFILE_PATH
echo 'export PATH="$BUN_INSTALL/bin:$PATH"' >> $PROFILE_PATH
echo 'export BUN_DIR="$HOME/.heroku/bin"' >> $PROFILE_PATH
echo 'export PATH="./node_modules/.bin:$PATH"' >> $PROFILE_PATH
echo 'export PATH="$HOME/node_modules/.bin:$PATH"' >> $PROFILE_PATH
echo 'export VITE_RUBY_VITE_BIN_PATH="$HOME/node_modules/.bin/vite"' >> $PROFILE_PATH

export VITE_RUBY_VITE_BIN_PATH="$BUILD_DIR/node_modules/.bin/vite"


mkdir -p $CACHE_DIR/.bun/install/cache

echo <<EOT >> $HOME/.bunfig.toml
[install.cache]
# the directory to use for the cache
dir = "$CACHE_DIR/.bun/install/cache"

EOT

cat $HOME/.bunfig.toml

export PATH="$BUN_DIR:$PATH"

# download dependencies
cd $BUILD_DIR
bun install

ls -al $CACHE_DIR/.bun/install/cache
which bun
ls $ENV_DIR
